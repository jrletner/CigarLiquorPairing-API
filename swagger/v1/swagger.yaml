---
openapi: 3.0.1
info:
  title: CigarLiquorPairing API V1
  version: v1
paths:
  "/api/v1/cigars/create":
    post:
      summary: create cigar
      description: Create a new cigar
      tags:
      - Cigars
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
  "/api/v1/cigars/index":
    get:
      summary: list cigars
      description: List all cigars
      tags:
      - Cigars
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/cigars/update":
    put:
      summary: update cigar
      description: Update a cigar
      tags:
      - Cigars
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
  "/api/v1/cigars/delete":
    delete:
      summary: delete cigar
      description: Delete a cigar
      tags:
      - Cigars
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
  "/api/v1/cigars/show":
    get:
      summary: show cigar
      description: List a single cigar
      tags:
      - Cigars
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the cigar
      responses:
        '200':
          description: successful
  "/api/v1/liquors/create":
    post:
      summary: create liquor
      description: Create a liquor
      tags:
      - Liquors
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
  "/api/v1/liquors/index":
    get:
      summary: list liquors
      description: Show all liquors
      tags:
      - Liquors
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/liquors/update":
    put:
      summary: update liquor
      description: Update a liquor
      tags:
      - Liquors
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
  "/api/v1/liquors/delete":
    delete:
      summary: delete liquor
      description: List a single liquor
      tags:
      - Liquors
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
  "/api/v1/liquors/show":
    get:
      summary: show liquor
      description: List a single liquor
      tags:
      - Liquors
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the liquor
      responses:
        '200':
          description: successful
  "/api/v1/pairings/create":
    post:
      summary: create pairing
      description: Create a pairing
      tags:
      - Pairings
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cigar_id:
                  type: number
                liquor_id:
                  type: number
  "/api/v1/pairings/index":
    get:
      summary: list pairings
      description: List all pairings
      tags:
      - Pairings
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/pairings/update":
    put:
      summary: update pairing
      description: Update a pairing
      tags:
      - Pairings
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                cigar_id:
                  type: number
                liquor_id:
                  type: number
  "/api/v1/pairings/delete":
    delete:
      summary: delete pairing
      description: Delete a pairing
      tags:
      - Pairings
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
  "/api/v1/pairings/show":
    get:
      summary: show pairing
      description: Show a single pairing
      tags:
      - Pairings
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the pairing
      responses:
        '200':
          description: successful
  "/api/v1/users/login":
    post:
      summary: login user
      description: Log a user in
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  "/api/v1/users/create":
    post:
      summary: create user
      description: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                password:
                  type: string
  "/api/v1/users/me":
    get:
      summary: me user
      description: Return a single user
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/users/logout":
    delete:
      summary: logout user
      description: Log a user out
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/users/index":
    get:
      summary: list users
      description: Return a list of all users
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/users/update":
    put:
      summary: update user
      description: Update a user. Pass the user_id, first_name, last_name
      tags:
      - Users
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                first_name:
                  type: string
                last_name:
                  type: string
consumes:
- application/json
produces:
- application/json
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearer_format: string
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/
